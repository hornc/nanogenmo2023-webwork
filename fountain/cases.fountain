// H. S. Keeler's 15 Elemental Plot Combinations
// https://site.xavier.edu/polt/keeler/OnWebwork.pdf pp. 49–57
// generated as either GDF (output=1) or text prompts (output=2)
// Specify plot case with case=n (n=1–15)

Goal ::=
    <. a = 1 .> <. b = 2 .>
    (
      <. output = 2 .> Prompt<case,a,b>
      | <. output = 1 .> Graph<case,a,b>
    )
;

Prompt<case,a,b> ::=
    <. c = 3 .> <. d = 4 .>
    ( <. case = 1 .>
      Character<c> " takes some action which compels " Character<a> " to go to a particular location." #10
      Character<d> " takes some action which compels " Character<b> " to be in the same location." #10
      "Describe " Character<c> "'s action. "
      "Describe " Character<d> "'s action. "
      "Describe " Character<a> " going to that location. "
      "Describe how " Character<a> " interacts with " Character<b> " at the location."
    | <. case = 2 .>
      Character<a> " and " Character<b> " have an interaction. Later, because of this interaction, " Character<a>  " does something to " Character<b> ". "
      "Describe the first interaction. Describe the second interaction."
    | <. case = 3 .>
      Character<a> " and " Character<b> " have an interaction. Later, because of this interaction, " Character<a>  " does something to " Character<b> ". "
      "Still later, a third event occurs between " Character<a> " and " Character<b> " as a result of this second event. "
      "Describe the first interaction. Describe the second interaction. Describe the third interaction"
    )
;

Character<a> ::=
      <. a = 1 .> "Alice"
    | <. a = 2 .> "Bob"
    | <. a = 3 .> "Clarise"
    | <. a = 4 .> "Dylan"
    | <. a = 5 .> "Ernest"
    | <. a = 6 .> "Fleur"
;

Node<a> ::=
      <. a = 1 .> "A"
    | <. a = 2 .> "B"
    | <. a = 3 .> "C"
    | <. a = 4 .> "D"
    | <. a = 5 .> "E"
    | <. a = 6 .> "F"
;

Event<a> ::=
      <. a = 1 .> "1"
    | <. a = 2 .> "2"
    | <. a = 3 .> "3"
    | <. a = 4 .> "4"
    | <. a = 5 .> "5"
    | <. a = 6 .> "6"
;

Clist<n> ::=
    <. c = 1 .> {
      Node<c> ", " Character<c> ", 0" #10
      <. c += 1 .> }  <. c > n .>
;

Nlist<a, b> ::=
    NodeDef
    Clist<a>
    <. c = 1 .> {
      "e" Event<c> ", e" Event<c> ", " Event<c> #10
      <. c += 1 .> }  <. c > b .>
    EdgeDef
;

Graph<case,a,b> ::=
    ( <. case = 1 .>
       <. c = 4 .> <. e = 3 .> Nlist<c,e>
       "A, e1, 3.0" #10
       "C, e1, 1.0" #10
       "B, e2, 1.0" #10
       "D, e2, 1.0" #10
       "e1, e3, 3.0" #10
       "e2, e3, 1.0"
    | <. case = 2 .>
        <. c = 2 .> <. e = 2 .> Nlist<c,e>
        "A, e1, 3.0" #10
        "B, e1, 1.0" #10
        "e1, e2, 3.0" #10
        "e1, e2, 1.0"
    | <. case = 3 .>
        <. c = 2 .> <. e = 3 .> Nlist<c,e>
        "A, e1, 3.0" #10
        "B, e1, 1.0" #10
        "e1, e2, 3.0" #10
        "e1, e2, 1.0" #10
        "e2, e3, 1.0" #10
        "e2, e3, 3.0" #10
    | <. case = 4 .>
        <. c = 3 .> <. e = 3 .> Nlist<c,e>
        "C, e1, 1.0" #10
        "B, e1, 1.0" #10
        "A, e2, 3.0" #10
        "e1, e2, 1.0" #10
        "e1, e3, 1.0"
    | <. case = 5 .>
        <. c = 6 .> <. e = 5 .> Nlist<c,e>
        // 5 events
    | <. case = 6 .>
        <. c = 6 .> <. e = 5 .> Nlist<c,e>
        // 6 characters
        // 5 events
    | <. case = 7 .>
        <. c = 5 .> <. e = 4 .> Nlist<c,e>
        // 5 characters
        // 4 events
    | <. case = 8 .>
        <. c = 4 .> <. e = 4 .> Nlist<c,e>
        // 4 characters
        // 4 events
        // New Threads Born, p. 53
    | <. case = 9 .>
        <. c = 6 .> <. e = 4 .> Nlist<c,e>
        // 6 characters
        // 4 events
    | <. case = 10 .>
        <. c = 6 .> <. e = 4 .> Nlist<c,e>
        // 6 characters
        // 4 events
    | <. case = 11 .>
        <. c = 4 .> <. e = 3 .> Nlist<c,e>
        // 4 characters
        // 3 events
    | <. case = 12 .>
        <. c = 4 .> <. e = 4 .> Nlist<c,e>
        // 4 characters
        // 4 events
    | <. case = 13 .>
        <. c = 6 .> <. e = 5 .> Nlist<c,e>
        // 6 characters
        // 5 events
        // Row of bricks
    | <. case = 14 .>
        <. c = 6 .> <. e = 5 .> Nlist<c,e>
        // 6 characters
        // 5 events
    | <. case = 15 .>
        // Scheherazade tale, p. 56
        // pseudo-web
        // recursive ? web within a web?
    )
;

NodeDef ::= "nodedef>name VARCHAR,label VARCHAR,time INT" #10;
EdgeDef ::= "edgedef>node1 VARCHAR,node2 VARCHAR,weight DOUBLE" #10;

